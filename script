function decodeFunction(funcString) {
	count = 0
	current = 0
	funcParams[0] = "";
	for(i = 0; i < string_length(funcString); i += 1) {
		count++
		if(string_char_at(funcString, count) != " ") {
			funcParams[current] = funcParams[current] + string_char_at(funcString, count)
		}
		else {
			current++
			funcParams[current] = "";
		}
	}
		
	
	return funcParams
}

function failedFunction(reason = "unkown error") {
	show_message("ERROR OCCURED IN SCRIPT: " + reason);	
	game_end();
}

function runScriptFile(file) {
	ofile = file_text_open_read(file);
	
}

function runScriptAsLine(line) {
	tempS = decodeFunction(line);
	runFunction(tempS);
}

function runFunction(funcArray) {
	count = 0;
	cap = array_length(funcArray);
	while (count < cap) {
		
		cline = funcArray[count]
		if(cline=="turn") {
			count++
			image_angle += real(funcArray[count]);	
		}
		
		else if(cline=="add_x") {
			count++
			x += real(funcArray[count]);
		}
		
		else if(cline=="add_y") {
			count++
			y += real(funcArray[count]);
		}
		
		else if(cline=="set_y") {
			count++
			y = real(funcArray[count]);
		}
		else if(cline=="set_x") {
			count++
			x = real(funcArray[count]);
		}
		
		else if(cline=="set_alpha") {
			count++
			image_alpha = real(funcArray[count]);
		}
		else if(cline=="add_alpha") {
			count++
			image_alpha += real(funcArray[count]);
		}
		
		else if(cline=="set_frame") {
			count++
			image_index += real(funcArray[count]);
		}
		else if(cline=="goto_mouse") {
			x = mouse_x
			y = mouse_y
		}
		else if(cline=="await_grab") {
			if(!mouse_check_button(mb_left)) {waitGrab = false;};
			if((mouse_check_button_pressed(mb_left) and position_meeting(mouse_x,mouse_y,self)) or waitGrab) {
				x = mouse_x
				waitGrab = true;
				y = mouse_y
			}
		}
		else if(cline=="animation_speed") {
			count++
			image_speed += real(funcArray[count]);
		}
		
		else if(cline=="preset_rpgMovement") {
			if(keyboard_check(ord("D"))) {x += 5};
			if(keyboard_check(ord("A"))) {x += -5};
			if(keyboard_check(ord("W"))) {y += -5};
			if(keyboard_check(ord("S"))) {y += 5};
		}
		
		else if(cline=="set_sprite") {
			count++
			try {
				sprite_index = asset_get_index(funcArray[count]);
			}
			catch(_exception) {
				failedFunction("code error - unavailable sprite")
			}
		}
		
		else {failedFunction("Invalid Command")}
		count++
	}
	
}
